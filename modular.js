#include "crop.js"#target photoshop/*  @@@BUILDINFO@@@ Modular.jsx 0.0.1*//**  Требования: слои для обработки должны называться десятичной цифрой без букв*/// разница между y нижней границы модуля и y верхней границы черного прямоугольникаvar BOTTOM_RECT_UP = 20;// разница между y-координатов нижней границы модуля и y-координатой нижней границы черного прямоугольникаvar BOTTOM_RECT_BOTTOM = 40;// разница между x-координатов правой границы модуля и x-координатой правой границы черного прямоугольникаvar BOTTOM_RECT_RIGHT = 20;processAllDocuments();function processModularLayer(layer) {  /*    (x, y) верхнего левого угла    (x, y) нижнего правого угла  */  var bounds = layer.boundsNoEffects;  /*    Создаем новый слой и помещаем его под слой, который обрабатываем  */  var bottomRectLayer = activeDocument.artLayers.add();  bottomRectLayer.name = layer.name + '_' + 'bottom';  bottomRectLayer.move(layer, ElementPlacement.PLACEAFTER);  activeDocument.activeLayer = bottomRectLayer;  /*    Выделяем область для нижнего черного прямоугольника  */  var left = bounds[0].value;  var right = bounds[2].value;  var bottom = bounds[3].value;  var coords = [    [left, bottom - BOTTOM_RECT_UP],    [right + BOTTOM_RECT_RIGHT, bottom - BOTTOM_RECT_UP],    [right + BOTTOM_RECT_RIGHT, bottom + BOTTOM_RECT_BOTTOM],    [left, bottom + BOTTOM_RECT_BOTTOM]  ];  activeDocument.selection.select(coords);  /*    Заливаем область черным  */  app.foregroundColor.rgb.hexColor = 'ff0000';  app.foregroundColor.model = ColorModel.RGB;  activeDocument.selection.fill(app.foregroundColor, ColorBlendMode.COLOR, '50');  /*    Вырезаем углы у нижнего прямоугольника  */  cropRect(coords);  activeDocument.selection.selectAll();  /*     Гауссово размытие  */  activeDocument.activeLayer.applyGaussianBlur(9);}function cropRect(coords) {  var left = coords[0][0];  var up = coords[0][1];  var right = coords[2][0];  var bottom = coords[2][1];  // треть высоты прямоугольника  var third = Math.abs(bottom - up) / 3;  var cropPoints = [    [left - third, up],    [left + (2 * third), bottom],    [left - third, bottom]  ];  // обрезаем левый треугольник у прямоугольника  cropArea(cropPoints);  cropPoints = [    [right + third, bottom],    [right + third, up],    [right - 3 * third, up],  ];  cropArea(cropPoints);}function processDocument(document) {  var layer;  var LAYER_NAME_RE = new RegExp('^\\d+$', 'ig');  for (var j = 0; j < document.artLayers.length; j++) {      layer = document.artLayers[j];      if (LAYER_NAME_RE.test(layer.name)) {          // обрабатываем слой с картинкой          processModularLayer(layer);          // ВРЕМЕННО!          return;      }  }}function processAllDocuments() {  var doc;  for (var i = 0; i < app.documents.length; i++) {    doc = app.documents[i];    app.activeDocument = doc;    processDocument(doc);  }}